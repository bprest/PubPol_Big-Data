source('C:/Users/Brianprest/OneDrive/Grad School/TAing/Big Data/Git/01 - Intro to R/Intro Practice.R')
x^2
x^2
x.T*x
x.?
1
# This is a practice file
# In R: F5 runs selected lines
# In RStudio: Ctrl+Enter runs selected lines
x = c(1,2,3)
# This is a practice file
# In R: F5 runs selected lines
# In RStudio: Ctrl+Enter runs selected lines
x = c(1,2,3)
x =x*x
source('C:/Users/Brianprest/OneDrive/Grad School/TAing/Big Data/Git/01 - Intro to R/Intro Practice.R', echo=TRUE)
source('C:/Users/Brianprest/OneDrive/Grad School/TAing/Big Data/Git/01 - Intro to R/Intro Practice.R', echo=TRUE)
2x
2*x
2*x
# This is a practice file
# In R: F5 runs selected lines
# In RStudio: Ctrl+Enter runs selected lines
x = c(1,2,3)
x = x*x
x
2*x
x = x*x
x
x = x*x
x
x = x*x
x
x = x*x
x
x = c(1,2,3)
x <- c(1,2,3) # Same thing
xx?
x
x?
x
x = c(1,3,2,5) # Define a vector (a multidimensional variable; here, 1x4)
x = c(1,3,2,5) # Define a vector (a multidimensional variable; here, 1x4)
x <- c(1,3,2,5) # Same thing
y = x*x # Algebra on vectors is pointwise by default
y
z = x +2
z
len(x)
length(x)
# This is a practice file, showing the basics of R
# In RStudio: Ctrl+Enter runs selected line(s)
# Part 1: Defining variables
x = c(1,3,2,5) # Define a vector (a multidimensional variable; here, 1x4)
x <- c(1,3,2,5) # Same thing
length(x)
x*x # Algebra on vectors is pointwise by default
x*x # Algebra on vectors is pointwise by default
z = x + 2
z
# In the Console, we can interact
# Calling whole functions with source('filepath')
2*x
1+2
1+2
x=7
x
y=2*x
# This is a practice file, showing the basics of R.
# Brian Prest
# 5/26/2015
#### Part 1: Using R Interactively (thru the Console)
# In Console:
1+2
x=7
y=2*x
#### Part 2: Using Scripts in RStudio
# But we want to save this stuff. So we write it all down in a script (like a do file, for those of you who have done Stata)
# Once it is written down, we can execute the lines directly from the script, either in chunks (line by line) or all at once.
# RStudio Commands:
# Run selected lines:                              Ctrl+Enter
# Run everything from the Beginning to the cursor: Ctrl+Alt+B
# Run everything from the the cursor to the End:   Ctrl+Alt+E
# Run everything:                                  Ctrl+Alt+R
# Part 1: Defining variables
x = 7
x = c(1,3,2,4) # Define a vector (a multidimensional variable; here, 1x4)
x <- c(1,3,2,4) # Same thing
y = c(1,2,3,4,5)
length(x)
# This is a practice file, showing the basics of R.
# Brian Prest
# 5/26/2015
#### Part 1: Using R Interactively (thru the Console)
# In Console:
1+2
x=7
y=2*x
#### Part 2: Using Scripts in RStudio
# But we want to save this stuff. So we write it all down in a script (like a do file, for those of you who have done Stata)
# Once it is written down, we can execute the lines directly from the script, either in chunks (line by line) or all at once.
# RStudio Commands:
# Run selected lines:                              Ctrl+Enter
# Run everything from the Beginning to the cursor: Ctrl+Alt+B
# Run everything from the the cursor to the End:   Ctrl+Alt+E
# Run everything:                                  Ctrl+Alt+R
# Part 1: Defining variables
x = 7
x = c(1,3,2,4) # Define a vector (a multidimensional variable; here, 1x4)
x <- c(1,3,2,4) # Same thing
y = c(1,2,3,4,5)
length(x)
length(y)
x+y
y[1:4]
y[1,2,4]
1:4
y[1:4]
x[1:3]
# This is a practice file, showing the basics of R.
# Brian Prest
# 5/26/2015
#### Part 1: Using R Interactively (thru the Console)
# In Console:
1+2
x=7
y=2*x
#### Part 2: Using Scripts in RStudio
# But we want to save this stuff. So we write it all down in a script (like a do file, for those of you who have done Stata)
# Once it is written down, we can execute the lines directly from the script, either in chunks (line by line) or all at once.
# RStudio Commands:
# Run selected lines:                              Ctrl+Enter
# Run everything from the Beginning to the cursor: Ctrl+Alt+B
# Run everything from the the cursor to the End:   Ctrl+Alt+E
# Run everything:                                  Ctrl+Alt+R
# Part 1: Defining variables
x = 7
x = c(1,3,2,4) # Define a vector (a multidimensional variable; here, 1x4)
x <- c(1,3,2,4) # Same thing
y = c(1,2,3,4,5)
length(x)
length(y)
#x+y # Doesn't work!
# Indexing
x[1:3]
z = x + y[1:4] # Comformable vectors
# List function: Lists all objects currently held in R
ls()
rm(z)
ls()
rm(ls())
type(ls())
typeof(ls())
list=ls()
rm(list)
?rm
?ls
rm(list=ls())
ls()
?rm
?matrix
?rm
# This is a practice file, showing the basics of R.
# Brian Prest
# 5/26/2015
#### Part 1: Using R Interactively (thru the Console)
# In Console:
1+2
x=7
y=2*x
#### Part 2: Using Scripts in RStudio
# But we want to save this stuff. So we write it all down in a script (like a do file, for those of you who have done Stata)
# Once it is written down, we can execute the lines directly from the script, either in chunks (line by line) or all at once.
# RStudio Commands:
# Run selected lines:                              Ctrl+Enter
# Run everything from the Beginning to the cursor: Ctrl+Alt+B
# Run everything from the the cursor to the End:   Ctrl+Alt+E
# Run everything:                                  Ctrl+Alt+R
# Part 1: Defining variables
x = 7
x = c(1,3,2,4) # Define a vector (a multidimensional variable; here, 1x4)
x <- c(1,3,2,4) # Same thing
y = c(1,2,3,4,5)
length(x)
length(y)
#x+y # Doesn't work!
# Indexing
x[1:3]
z = x + y[1:4] # Comformable vectors
# List function: Lists all objects currently held in R
ls()
# Remove function: delete objects
rm(z)
?rm
# Help function. It looks like the remove function has two ways to enter variables for deletion:
# either list them with commas separating them, or create a character vector listing the ones to delete.
delvars = ls()
rm(list=ls())
# This is a practice file, showing the basics of R.
# Brian Prest
# 5/26/2015
#### Part 1: Using R Interactively (thru the Console)
# In Console:
1+2
x=7
y=2*x
#### Part 2: Using Scripts in RStudio
# But we want to save this stuff. So we write it all down in a script (like a do file, for those of you who have done Stata)
# Once it is written down, we can execute the lines directly from the script, either in chunks (line by line) or all at once.
# RStudio Commands:
# Run selected lines:                              Ctrl+Enter
# Run everything from the Beginning to the cursor: Ctrl+Alt+B
# Run everything from the the cursor to the End:   Ctrl+Alt+E
# Run everything:                                  Ctrl+Alt+R
# Part 1: Defining variables
x = 7
x = c(1,3,2,4) # Define a vector (a multidimensional variable; here, 1x4)
x <- c(1,3,2,4) # Same thing
y = c(1,2,3,4,5)
length(x)
length(y)
#x+y # Doesn't work!
# Indexing
x[1:3]
z = x + y[1:4] # Comformable vectors
# List function: Lists all objects currently held in R
ls()
# Remove function: delete objects
rm(z)
?rm
# Help function. It looks like the remove function has two ways to enter variables for deletion:
# either list them with commas separating them, or create a character vector listing the ones to delete.
delvars = ls()
rm(list=delvars)
rm(delvars)
rm(list=ls()) # Chaining commands can be shorter
# This is a practice file, showing the basics of R.
# Brian Prest
# 5/26/2015
#### Part 1: Using R Interactively (thru the Console)
# In Console:
1+2
x=7
y=2*x
#### Part 2: Using Scripts in RStudio
# But we want to save this stuff. So we write it all down in a script (like a do file, for those of you who have done Stata)
# Once it is written down, we can execute the lines directly from the script, either in chunks (line by line) or all at once.
# RStudio Commands:
# Run selected lines:                              Ctrl+Enter
# Run everything from the Beginning to the cursor: Ctrl+Alt+B
# Run everything from the the cursor to the End:   Ctrl+Alt+E
# Run everything:                                  Ctrl+Alt+R
# Part 1: Defining variables
x = 7
x = c(1,3,2,4) # Define a vector (a multidimensional variable; here, 1x4)
x <- c(1,3,2,4) # Same thing
y = c(1,2,3,4,5)
length(x)
length(y)
#x+y # Doesn't work!
# Indexing
x[1:3]
z = x + y[1:4] # Comformable vectors
# List function: Lists all objects currently held in R
ls()
# Remove function: delete objects
rm(z)
?rm
# Help function. It looks like the remove function has two ways to enter variables for deletion:
rm(list=ls()) # Chaining commands can be shorter
ls()
?matrix
X = matrix(data=c(1,2,3,4,5,6), nrow=3, ncol=2)
X
Y = matrix(data=c(1,2,3,4,5,6), nrow=2, ncol=3)
Y
[X Y]
[X, Y]
[X; Y]
c(X,Y)
X = matrix(data=c(1,2,3,4,5,6), nrow=3, ncol=4)
X
X = matrix(data=c(1,2,3,4,5,6), nrow=3, ncol=3)
X
Y = matrix(data=c(1,2,3,4,5,6), nrow=2, ncol=3)
Y = matrix(data=c(1,2,3,4,5,6), ncol=2, nrow=3)
X
Y
X = matrix(data=c(1,2,3,4,5,6), nrow=3, ncol=2)
Y = matrix(data=c(1,2,3,4,5,6), ncol=2, nrow=3)
X
Y
Y = matrix(ncol=2, nrow=3, data=c(1,2,3,4,5,6)) # Same thing--order doesn't matter so long as you specify the argument
Y
X
X = matrix(c(1,2,3,4,5,6), 3, 2)
X
size(X)
dim(X)
ndim(X)
dim(X)
X = matrix(c(1,2,3,4,5,6), 3, 2)
Y = matrix(ncol=2, nrow=3, data=c(1,2,3,4,5,6))
Y = matrix(2, 3, c(1,2,3,4,5,6))
Y
X = matrix(c(1,2,3,4,5,6), 3, 2)
Y = matrix(2, 3, c(1,2,3,4,5,6))
Y = matrix(2, 3, c(2,2,3,4,5,6)) # here, it thinks that the data is just "2", and repeats it for 3 rows.
Y
2*x
x = c(1,2,3,4)
2*x
x*x
x^2
x + 2
X*X
X
X''
X'
X
breka
0
0
X
X
Y
X = matrix(c(1,2,3,4),2,3)
Y = matrix(c(4,1,2,3),3,2)
X*Y
X%*%Y
X%*%Y
XX
X
Y
t(X)
X
mean(X)
X
Y
Z=t(y)
Z=t(Y)
X
Z
cbind(X,Z)
X
Y
Z
X
Y
Z
rbind(X,Z)
rowMeans(X)
rowSums(X)
colMeans(X)
colSums(X)
X
?rnorm()
rnorm(5,mean=0,sd=1)
set.seed(17) # 17 is arbitrary
rnorm(5,mean=0,sd=1)
set.seed(17) # 17 is arbitrary
rnorm(5,mean=0,sd=1)
set.seed(17) # 17 is arbitrary
rnorm(5,mean=0,sd=1)
rnorm(5,mean=0,sd=1)
rnorm(5,mean=0,sd=1)
rnorm(5,mean=0,sd=1)
rnorm(5,mean=0,sd=1)
rnorm(5,mean=0,sd=1)
rnorm(5,mean=0,sd=1)
set.seed(17) # 17 is arbitrary
rnorm(5,mean=0,sd=1)
set.seed(17) # 17 is arbitrary
rnorm(5,mean=0,sd=1)
set.seed(17) # 17 is arbitrary
rnorm(5,mean=0,sd=1)
set.seed(17) # 17 is arbitrary
rnorm(5,mean=0,sd=1)
set.seed(17) # 17 is arbitrary
rnorm(5,mean=0,sd=1)
set.seed(17) # 17 is arbitrary
rnorm(5,mean=0,sd=1)
set.seed(17) # 17 is arbitrary
rnorm(5,mean=0,sd=1)
set.seed(17) # 17 is arbitrary
rnorm(5,mean=0,sd=1)
set.seed(1303) # 1303 is arbitrary
rnorm(5,mean=0,sd=1)
set.seed(1303) # 1303 is arbitrary
rnorm(5,mean=0,sd=1)
set.seed(1303) # 1303 is arbitrary
rnorm(5,mean=0,sd=1)
set.seed(1303) # 1303 is arbitrary
rnorm(5,mean=0,sd=1)
set.seed(1303) # 1303 is arbitrary
rnorm(5,mean=0,sd=1)
set.seed(1303) # 1303 is arbitrary
rnorm(5,mean=0,sd=1)
set.seed(1303) # 1303 is arbitrary
rnorm(5,mean=0,sd=1)
set.seed(1303) # 1303 is arbitrary
rnorm(5,mean=0,sd=1)
sqrt(x)
x = rnorm(100)
y = rnorm(100)
plot(x,y)
plot(x,y, xlab = "Our X-axis label", ylab = "Our Y-axis label", main = "Our Graph Title")
pwd
!pwd
pwd
cd
!cd
!pwd
pdf("Gobbledegook.pdf")
x
1:4
x[c(1,3,4)]
x = 7
x = c(1,3,2,4) # Define a vector (a multidimensional variable; here, 1x4)
x <- c(1,3,2,4) # Same thing
y = c(1,2,3,4,5)
length(x)
length(y)
#x+y # Doesn't work!
# Indexing
x[1:3]
x
x[c(3,2,4)]
x[c(3,2,1)]
setwd("C:/Users/Brianprest/OneDrive/Grad School/TAing/Big Data/Git/01 - Intro to R")
wd = "C:\Users\Brianprest\OneDrive\Grad School\TAing\Big Data\Git"
wd = 'C:\Users\Brianprest\OneDrive\Grad School\TAing\Big Data\Git'
word="apple"
wdir = 'C:\\Users\Brianprest\OneDrive\Grad School\TAing\Big Data\Git'
wdir = 'C:\\Users\\Brianprest\\OneDrive\\Grad School\\TAing\\Big Data\\Git'
wdir
wdir+"x"
c(wdir,"x")
wdir
?dir
dir(wdir0)
dir(wdir)
list = dir(wdir)
list
list[2]
paste(wdir,list[2])
paste(wdir,"\\",list[2])
paste(wdir,"\\",list[2],collapse=" ")
paste(wdir,"\\",list[1])
pdf(paste(wdir,"\\",list[1],"Gobbledegook.pdf"))
pdf(paste(wdir,"\\",list[1],"\\","Gobbledegook.pdf"))
pdf(paste("C:\Users\\Brianprest\\OneDrive\\Grad School\\TAing\\Big Data\\Git\\01 - Intro to R\\","Gobbledegook.pdf"))
pdf(paste("C:\\Users\\Brianprest\\OneDrive\\Grad School\\TAing\\Big Data\\Git\\01 - Intro to R\\","Gobbledegook.pdf"))
plot(x,y)
x = rnorm(100)
y = rnorm(100)
plot(x,y)
pdf(paste("C:\\Users\\Brianprest\\OneDrive\\Grad School\\TAing\\Big Data\\Git\\01 - Intro to R\\","Gobbledegook.pdf", sep=""))
pdf(paste(wdir,"\\",list[1],"\\","Gobbledegook.pdf", sep=""))
pdf(paste(wdir,"\\",list[1],"\\","Gobbledegook2.pdf", sep=""))
paste("apple","banana")
paste("apple","banana",sep="--")
paste("apple","banana",sep="")
paste("apple","banana","candy")
paste("apple","banana","candy",sep="--")
paste("apple","banana","candy",sep="")
mypath = file.path("C:","Users","Brianprest","OneDrive","Grad School","TAing","Big Data","Git")
mypath
ls
ls()
pdflocation = mypath
mypath
pdf(paste(mypath,"Gobbledegook.pdf", sep=""))
paste(mypath,"Gobbledegook.pdf", sep="")
pdf(paste(mypath,"/Gobbledegook.pdf", sep=""))
dev.off()
dev.off()
dev.off()
dev.off()
dev.off()
dev.off()
dev.off()
dev.off()
pi
seq(-pi,pi,length=50)
-pi:pi
-3:3
-4:4
contour(1:10,1:10)
